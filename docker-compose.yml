version: "3.7"

services:

  db:
    image: neo4j:4.1
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4JLABS_PLUGINS=["apoc"]
    volumes:
      - "dbdata:/data"
      - "dblogs:/logs"
    healthcheck:
      test: perl -MIO::Socket::INET -e 'exit(! defined( IO::Socket::INET->new("localhost:7687")))'

  api:
    image: bentrm/datacat:${DATACAT_VERSION}
    restart: unless-stopped
    environment:
      - logging.level.de.bentrm=INFO
      - datacat.explorer.url=${DATACAT_EDITOR_URL}
      - datacat.auth.secret=${DATACAT_SECRET}
      - datacat.auth.issuer=${DATACAT_ISSUER}
      - datacat.users.admin.password=${DATACAT_ADMIN_PASSWORD}
      - spring.mail.port=${MAIL_PORT}
      - spring.mail.host=${MAIL_HOST}
      - spring.data.neo4j.username=neo4j
      - spring.data.neo4j.password=${NEO4J_PASSWORD}
      - spring.data.neo4j.uri=bolt://db:7687
    depends_on:
      - db
    command: [
        "wait-for-it", "db:7687", "--timeout=300", "--",
        "wait-for-it", "${MAIL_HOST}:${MAIL_PORT}", "--timeout=30", "--",
        "java", "--enable-preview", "org.springframework.boot.loader.JarLauncher" ]

  web:
    build:
      context: "./services/proxy/"
      args:
        VERSION: ${DATACAT_EDITOR_VERSION}
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - ${DATACAT_PORT:-3000}:80

volumes:
  dbdata:
  dblogs:
